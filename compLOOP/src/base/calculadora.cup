package sumadoraarbol;

import java_cup.runtime.Symbol;

action code {:
:}

parser code {:
    
    public Arbol arbolSintactico;

    @Override
    public void syntax_error(Symbol sy) {
        token t=(token)sy.value;
        done_parsing();
        report_error("Error sintáctico cerca de " + t.getTipo() + ", " + t.getLexema() + ", " + t.getTabulaciones() + ". ",null);
        
    }
:}

init with {: 
    arbolSintactico = new Arbol();
:};

//Los símbolos terminales sin token significan que son palabras, tal cual las pasamos
//Si tienen el token significa que es una expresión regular

//##############################################################################
// Símbolos terminales
//##############################################################################

terminal CLASE, PROPIEDADES, METODOS;
terminal IF, ENTONCES, SINO;
terminal LEER, ESCRIBIR;
terminal DEVOLVER, CONSTRUCTOR, DESTRUCTOR, PRINCIPAL, INSTANCIAR, DESDE, MIENTRAS;
terminal INCREMENTO, DECREMENTO, HACER, EXTIENDE;
terminal PARENTESIS1, PARENTESIS2, COMA;
terminal IGUAL, AND, OR, DOS_PUNTOS;
terminal PUNTO_Y_COMA;
terminal VARIABLE, RAIZ;
terminal MENOS, PUNTO;
terminal VARIABLE_CLASE,ELIMINAR;
terminal TIPO_DATO_CUP;
terminal SUMA, RESTA, MULTIPLICACION, DIVISION, EXPONENCIACION, MODULO;
terminal MENOR_QUE, MAYOR_QUE, DISTINTO_QUE, IGUAL_QUE, INCREMENTAR, DECREMENTAR;
terminal SENO, COSENO, TANGENTE, LOGARITMO, PROPIEDADES_METODOS;
terminal CADENA_A_BOOLEANO, CADENA_A_REAL, CADENA_A_ENTERO;

//##############################################################################
//VARIABLES DEL CUP
//##############################################################################

non terminal S;
non terminal DECLARACION_CLASES_CUP, CLASES_CUP, ENCABEZADO_CUP, PROPIEDADES_CUP;
non terminal METODOS_CUP, VARIABLES_PROPIEDADES_CUP, CODIGO_METODOS_CUP;
non terminal DECLARACION_VARIABLES_CUP, CONDICION_CUP, ELSE_CUP;
non terminal OPERACIONES_CUP, REALIZAR_OPERACION_CUP, LISTA_OPERACIONES_CUP;
non terminal VARIABLES_CUP, VALOR_INICIAL_CUP, ESTRUCTURA_SELECTIVA_CUP;
non terminal LECTURA_ESCRITURA_CUP, LECTURA_CUP, ESCRITURA_CUP, DEVOLUCION_CUP;
non terminal OPERADORES_LOGICOS_CUP, TIPOS_DATOS_CONDICIONES_CUP;

//##############################################################################
// Precedencia símbolos terminales
//##############################################################################
precedence right SUMA, RESTA;
precedence left EXPONENCIACION, MODULO, RAIZ;
precedence left MULTIPLICACION, DIVISION;
precedence right OR;
precedence left AND;

start with S;

//##############################################################################
// Declaración de gramática
//##############################################################################

S ::=                           CLASES_CUP;

CLASES_CUP ::=                  DECLARACION_CLASES_CUP CLASES_CUP |
                                DECLARACION_CLASES_CUP;

DECLARACION_CLASES_CUP ::=      ENCABEZADO_CUP PROPIEDADES_CUP METODOS_CUP;

ENCABEZADO_CUP ::=              CLASE VARIABLE_CLASE EXTIENDE VARIABLE_CLASE |
                                CLASE VARIABLE_CLASE;

PROPIEDADES_CUP ::=             PROPIEDADES PROPIEDADES_METODOS DOS_PUNTOS VARIABLES_PROPIEDADES_CUP PROPIEDADES_CUP |
                                PROPIEDADES PROPIEDADES_METODOS DOS_PUNTOS VARIABLES_PROPIEDADES_CUP;

VARIABLES_PROPIEDADES_CUP ::=   TIPO_DATO_CUP VARIABLE VARIABLES_PROPIEDADES_CUP |
                                TIPO_DATO_CUP VARIABLE;

METODOS_CUP ::=                 METODOS PROPIEDADES_METODOS DOS_PUNTOS CODIGO_METODOS_CUP METODOS_CUP |
                                METODOS PROPIEDADES_METODOS DOS_PUNTOS CODIGO_METODOS_CUP;

CODIGO_METODOS_CUP ::=          DECLARACION_VARIABLES_CUP CODIGO_METODOS_CUP |
                                REALIZAR_OPERACION_CUP CODIGO_METODOS_CUP |
                                LECTURA_ESCRITURA_CUP CODIGO_METODOS_CUP |
                                ESTRUCTURA_SELECTIVA_CUP CODIGO_METODOS_CUP |



                                ESTRUCTURA_SELECTIVA_CUP |
                                LECTURA_ESCRITURA_CUP |
                                REALIZAR_OPERACION_CUP |
                                DECLARACION_VARIABLES_CUP;

//Códigos generales 
//VARIABLES
DECLARACION_VARIABLES_CUP ::=   TIPO_DATO_CUP VARIABLES_CUP VALOR_INICIAL_CUP |
                                TIPO_DATO_CUP VARIABLES_CUP |
                                VARIABLE |
                                VARIABLE_CLASE PUNTO VARIABLE VALOR_INICIAL_CUP;

VARIABLES_CUP ::=               VARIABLE COMA VARIABLES_CUP |
                                VARIABLE |
                                TIPO_DATO_CUP ;

VALOR_INICIAL_CUP ::=           IGUAL MENOS MENOS VARIABLE |
                                IGUAL SUMA SUMA VARIABLE |
                                IGUAL VARIABLE MENOS MENOS |
                                IGUAL VARIABLE SUMA SUMA |
                                IGUAL MENOS VARIABLE |
                                IGUAL MENOS TIPO_DATO_CUP |
                                IGUAL MENOS REALIZAR_OPERACION_CUP |
                                IGUAL VARIABLE |
                                IGUAL TIPO_DATO_CUP |
                                IGUAL REALIZAR_OPERACION_CUP |
                                IGUAL CONDICION_CUP;

//OPERACIONES BÁSICAS
OPERACIONES_CUP  ::=            SUMA |
                                RESTA |
                                MULTIPLICACION |
                                DIVISION |
                                MODULO |
                                EXPONENCIACION |
                                AND |
                                OR;

REALIZAR_OPERACION_CUP ::=      VARIABLE LISTA_OPERACIONES_CUP |
                                TIPO_DATO_CUP LISTA_OPERACIONES_CUP;

LISTA_OPERACIONES_CUP ::=       OPERACIONES_CUP VARIABLE LISTA_OPERACIONES_CUP |
                                OPERACIONES_CUP TIPO_DATO_CUP LISTA_OPERACIONES_CUP |
                                OPERACIONES_CUP TIPO_DATO_CUP |
                                OPERACIONES_CUP VARIABLE;

//LECTURA Y ESCRITURA
LECTURA_ESCRITURA_CUP ::=       LECTURA_CUP |
                                ESCRITURA_CUP;

LECTURA_CUP ::=                 LEER VARIABLE;

ESCRITURA_CUP ::=               ESCRIBIR VARIABLES_CUP;

//ESTRUCTURAS SELECTIVAS 
OPERADORES_LOGICOS_CUP ::=      MENOR_QUE |
                                MAYOR_QUE |
                                IGUAL_QUE |
                                DISTINTO_QUE ;

CONDICION_CUP ::=               TIPOS_DATOS_CONDICIONES_CUP OPERADORES_LOGICOS_CUP TIPOS_DATOS_CONDICIONES_CUP ;

TIPOS_DATOS_CONDICIONES_CUP ::= VARIABLE |
                                TIPO_DATO_CUP;

ESTRUCTURA_SELECTIVA_CUP ::=    IF CONDICION_CUP ENTONCES DEVOLUCION_CUP ELSE_CUP |
                                IF CONDICION_CUP ENTONCES DEVOLUCION_CUP;

ELSE_CUP ::=                    SINO CONDICION_CUP ENTONCES DEVOLUCION_CUP ELSE_CUP |
                                SINO CONDICION_CUP ENTONCES DEVOLUCION_CUP |
                                SINO DEVOLUCION_CUP;
                                //IF CONDICION_CUP ENTONCES CODIGO_METODOS_CUP;

DEVOLUCION_CUP ::=              DEVOLVER TIPO_DATO_CUP |
                                DEVOLVER VARIABLE;

//ESTRUCTURAS ITERATIVAS