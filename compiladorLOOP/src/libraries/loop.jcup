package compiladorloop;

import java_cup.runtime.*;
import createdClasses.arbol;
import createdClasses.token;
import createdClasses.Nodo;
//Agregar variables
parser code {:
    public arbol tree;

    @Override
    public void syntax_error(Symbol sy){
        token t = (token)sy.value;
        done_parsing();
        report_error("Error sintáctico en el token: " + t.getLexema(), null);
    }
:}
init with{:
    this.tree = new arbol();
:}

//Los símbolos terminales sin token significan que son palabras, tal cual las pasamos
//Si tienen el token significa que es una expresión regular
//##############################################################################
// Símbolos terminales
//##############################################################################
//PALABRAS RESERVADAS
terminal CLASE, PROPIEDADES, METODOS, PROPIEDADES_METODOS;

//TIPOS DE DATOS Y FUNCIONES
terminal TIPO_ENTERO, TIPO_CADENA, TIPO_REAL, TIPO_BOOLEANO, TIPO_NULO;

//PALABRAS RESERVADAS DE IFS
terminal IF, ENTONCES, SINO;

//PALABRAS RESERVADAS LECTURA Y ESCRITURA
terminal LEER, ESCRIBIR;

//PALABRAS RESERVADAS CICLO, FUNCIONES, ETC
terminal DEVOLVER, CONSTRUCTOR, DESTRUCTOR, PRINCIPAL, INSTANCIAR, DESDE, MIENTRAS;
terminal INCREMENTAR, DECREMENTAR, HACER, EXTIENDE, INCLUIR;

//REGLAS EXTRAS
//terminal ????????????????????????????????????

//SIGNOS
terminal FI, PARENTESIS1, PARENTESIS2, COMA, SUMA, RESTA, MULTIPLICACION, DIVISION;
terminal MODULO, EXPONENCIACION, IGUAL, INCREMENTO, DECREMENTO, AND, OR, MAYOR_QUE;
terminal MENOR_QUE, IGUAL_QUE, DISTINTO_QUE, DOS_PUNTOS, CORCHETE1, CORCHETE2;
terminal LLAVE1, LLAVE2, PUNTO_Y_COMA;

//TIPOS DE DATOS
terminal token DECIMALES, REALES, BOOLEANO, CADENA;

//VARIABLES
terminal VARIABLE, VALOR_ASIGNADO;
non terminal LISTA_VARIABLES, DECLARACION_VARIABLES, TIPO_DATO;

//CLASES
terminal  VARIABLE_CLASE;
non terminal CUERPO_CLASE , LISTA_METODOS,LISTA_PROPIEDADES, DECLARACION_CLASES;
//ERROR
terminal ERROR;

//##############################################################################
//VARIABLES DEL CUP
//##############################################################################
non terminal token S, I, OP;
non terminal ASIGNACION_ENTERO_CUP, ASIGNACION_REAL_CUP, ASIGNACION_CADENA_CUP;
non terminal ASIGNACION_BOOLEANO_CUP, SUMA_CUP, RESTA_CUP, MULTIPLICACION_CUP;
non terminal DIVISION_CUP, MODULO_CUP, EXPONENCIACION_CUP;
//TABULACION
terminal TABULACION;

//##############################################################################
// Precedencia símbolos terminales
//##############################################################################
//precedence left MAS;                    
//precedence left MENOS;

start with S;

//El código se va a ejecutar hasta que se hayan cumplido las reglas anteriores.
S ::=                       AND S            {: System.out.println("S -> I S"); :}
                            |OR              {: System.out.println("S -> I"); :}
                            |DECLARACION_VARIABLES
                            |DECLARACION_CLASES;

DECLARACION_CLASES ::=      CLASE VARIABLE_CLASE CUERPO_CLASE 
                            |CLASE VARIABLE_CLASE EXTIENDE VARIABLE_CLASE CUERPO_CLASE;

CUERPO_CLASE::=             TABULACION PROPIEDADES PROPIEDADES_METODOS DOS_PUNTOS FI LISTA_PROPIEDADES CUERPO_CLASE;

LISTA_PROPIEDADES::=        TABULACION DECLARACION_VARIABLES 
                            |TABULACION DECLARACION_VARIABLES FI LISTA_PROPIEDADES;

DECLARACION_VARIABLES ::=   TIPO_DATO VARIABLE {: System.out.println("tipo variable"); :}
                            |TIPO_DATO VARIABLE COMA LISTA_VARIABLES 
                            |TIPO_DATO VARIABLE IGUAL VALOR_ASIGNADO 
                            |TIPO_DATO VARIABLE COMA LISTA_VARIABLES IGUAL VALOR_ASIGNADO;

LISTA_VARIABLES ::=         VARIABLE 
                            |VARIABLE COMA LISTA_VARIABLES; 

TIPO_DATO ::=               TIPO_ENTERO
                            |TIPO_BOOLEANO 
                            |TIPO_CADENA 
                            |TIPO_REAL ;
                        
VALOR_ASIGNADO ::=          DECIMALES
                            |REALES
                            |BOOLEANO
                            |CADENA;

//##############################################################################
// Reglas de asignación de variables
//##############################################################################

ASIGNACION_ENTERO_CUP ::=   TIPO_ENTERO VARIABLE |
                            TIPO_ENTERO VARIABLE PUNTO_Y_COMA |
                            TIPO_ENTERO VARIABLE IGUAL DECIMALES |
                            TIPO_ENTERO VARIABLE IGUAL DECIMALES PUNTO_Y_COMA |
                            TIPO_ENTERO VARIABLE IGUAL REALES |
                            TIPO_ENTERO VARIABLE IGUAL REALES PUNTO_Y_COMA |
                            VARIABLE_CLASE PUNTO VARIABLE IGUAL DECIMAL |
                            VARIABLE_CLASE PUNTO VARIABLE IGUAL REALES |
                            TIPO_ENTERO VARIABLE IGUAL RESTA DECIMALES |
                            TIPO_ENTERO VARIABLE IGUAL RESTA DECIMALES PUNTO_Y_COMA |
                            TIPO_ENTERO VARIABLE IGUAL RESTA REALES |
                            TIPO_ENTERO VARIABLE IGUAL RESTA REALES PUNTO_Y_COMA |
                            VARIABLE_CLASE PUNTO VARIABLE IGUAL RESTA DECIMAL |
                            VARIABLE_CLASE PUNTO VARIABLE IGUAL RESTA REALES;

ASIGNACION_REAL_CUP ::=     TIPO_REAL VARIABLE |
                            TIPO_REAL VARIABLE PUNTO_Y_COMA |
                            TIPO_REAL VARIABLE IGUAL DECIMALES |
                            TIPO_REAL VARIABLE IGUAL DECIMALES PUNTO_Y_COMA |
                            TIPO_REAL VARIABLE IGUAL REALES |
                            TIPO_REAL VARIABLE IGUAL REALES PUNTO_Y_COMA |
                            VARIABLE_CLASE PUNTO VARIABLE IGUAL DECIMAL |
                            VARIABLE_CLASE PUNTO VARIABLE IGUAL REALES |
                            TIPO_REAL VARIABLE IGUAL RESTA DECIMALES |
                            TIPO_REAL VARIABLE IGUAL RESTA DECIMALES PUNTO_Y_COMA |
                            TIPO_REAL VARIABLE IGUAL RESTA REALES |
                            TIPO_REAL VARIABLE IGUAL RESTA REALES PUNTO_Y_COMA |
                            VARIABLE_CLASE PUNTO VARIABLE IGUAL RESTA DECIMAL |
                            VARIABLE_CLASE PUNTO VARIABLE IGUAL RESTA REALES;

ASIGNACION_CADENA_CUP ::=   TIPO_CADENA VARIABLE |
                            TIPO_CADENA VARIABLE PUNTO_Y_COMA |
                            TIPO_CADENA VARIABLE IGUAL CADENA |
                            TIPO_CADENA VARIABLE IGUAL CADENA PUNTO_Y_COMA |
                            TIPO_CADENA VARIABLE IGUAL DECIMALES |
                            TIPO_CADENA VARIABLE IGUAL DECIMALES PUNTO_Y_COMA |
                            TIPO_CADENA VARIABLE IGUAL REALES |
                            TIPO_CADENA VARIABLE IGUAL REALES PUNTO_Y_COMA |
                            VARIABLE_CLASE PUNTO VARIABLE IGUAL DECIMAL |
                            VARIABLE_CLASE PUNTO VARIABLE IGUAL REALES |
                            VARIABLE_CLASE PUNTO VARIABLE IGUAL CADENA;

ASIGNACION_BOOLEANO_CUP ::= TIPO_BOOLEANO VARIABLE |
                            TIPO_BOOLEANO VARIABLE PUNTO_Y_COMA |
                            TIPO_BOOLEANO VARIABLE IGUAL BOOLEANO |
                            TIPO_BOOLEANO VARIABLE IGUAL BOOLEANO PUNTO_Y_COMA |
                            TIPO_BOOLEANO VARIABLE IGUAL DECIMALES |
                            TIPO_BOOLEANO VARIABLE IGUAL DECIMALES PUNTO_Y_COMA |
                            TIPO_BOOLEANO VARIABLE IGUAL REALES |
                            TIPO_BOOLEANO VARIABLE IGUAL REALES PUNTO_Y_COMA |
                            VARIABLE_CLASE PUNTO VARIABLE IGUAL DECIMAL |
                            VARIABLE_CLASE PUNTO VARIABLE IGUAL REALES |
                            VARIABLE_CLASE PUNTO VARIABLE IGUAL BOOLEANO;

//##############################################################################
// Operaciones aritméticas
//##############################################################################

SUMA_CUP ::=                TIPO_ENTERO VARIABLE IGUAL VARIABLE SUMA VARIABLE |
                            TIPO_ENTERO VARIABLE IGUAL VARIABLE SUMA VARIABLE PUNTO_Y_COMA |
                            TIPO_REAL VARIABLE IGUAL VARIABLE SUMA VARIABLE |
                            TIPO_REAL VARIABLE IGUAL VARIABLE SUMA VARIABLE PUNTO_Y_COMA |
                            TIPO_CADENA VARIABLE IGUAL VARIABLE SUMA VARIABLE |
                            TIPO_CADENA VARIABLE IGUAL VARIABLE SUMA VARIABLE PUNTO_Y_COMA |
                            VARIABLE IGUAL VARIABLE SUMA VARIABLE |
                            VARIABLE IGUAL VARIABLE SUMA VARIABLE PUNTO_Y_COMA;

RESTA_CUP ::=               TIPO_ENTERO VARIABLE IGUAL VARIABLE RESTA VARIABLE |
                            TIPO_ENTERO VARIABLE IGUAL VARIABLE RESTA VARIABLE PUNTO_Y_COMA |
                            TIPO_REAL VARIABLE IGUAL VARIABLE RESTA VARIABLE |
                            TIPO_REAL VARIABLE IGUAL VARIABLE RESTA VARIABLE PUNTO_Y_COMA |
                            VARIABLE IGUAL VARIABLE RESTA VARIABLE |
                            VARIABLE IGUAL VARIABLE RESTA VARIABLE PUNTO_Y_COMA;

MULTIPLICACION_CUP ::=      TIPO_ENTERO VARIABLE IGUAL VARIABLE MULTIPLICACION VARIABLE |
                            TIPO_ENTERO VARIABLE IGUAL VARIABLE MULTIPLICACION VARIABLE PUNTO_Y_COMA |
                            TIPO_REAL VARIABLE IGUAL VARIABLE MULTIPLICACION VARIABLE |
                            TIPO_REAL VARIABLE IGUAL VARIABLE MULTIPLICACION VARIABLE PUNTO_Y_COMA |
                            VARIABLE IGUAL VARIABLE MULTIPLICACION VARIABLE |
                            VARIABLE IGUAL VARIABLE MULTIPLICACION VARIABLE PUNTO_Y_COMA;

DIVISION_CUP ::=            TIPO_ENTERO VARIABLE IGUAL VARIABLE DIVISION VARIABLE |
                            TIPO_ENTERO VARIABLE IGUAL VARIABLE DIVISION VARIABLE PUNTO_Y_COMA |
                            TIPO_REAL VARIABLE IGUAL VARIABLE DIVISION VARIABLE |
                            TIPO_REAL VARIABLE IGUAL VARIABLE DIVISION VARIABLE PUNTO_Y_COMA |
                            VARIABLE IGUAL VARIABLE DIVISION VARIABLE |
                            VARIABLE IGUAL VARIABLE DIVISION VARIABLE PUNTO_Y_COMA;

MODULO_CUP ::=              TIPO_ENTERO VARIABLE IGUAL VARIABLE MODULO VARIABLE |
                            TIPO_ENTERO VARIABLE IGUAL VARIABLE MODULO VARIABLE PUNTO_Y_COMA |
                            TIPO_REAL VARIABLE IGUAL VARIABLE MODULO VARIABLE |
                            TIPO_REAL VARIABLE IGUAL VARIABLE MODULO VARIABLE PUNTO_Y_COMA |
                            VARIABLE IGUAL VARIABLE MODULO VARIABLE |
                            VARIABLE IGUAL VARIABLE MODULO VARIABLE PUNTO_Y_COMA;

EXPONENCIACION_CUP ::=      TIPO_ENTERO VARIABLE IGUAL VARIABLE EXPONENCIACION VARIABLE |
                            TIPO_ENTERO VARIABLE IGUAL VARIABLE EXPONENCIACION VARIABLE PUNTO_Y_COMA |
                            TIPO_REAL VARIABLE IGUAL VARIABLE EXPONENCIACION VARIABLE |
                            TIPO_REAL VARIABLE IGUAL VARIABLE EXPONENCIACION VARIABLE PUNTO_Y_COMA |
                            VARIABLE IGUAL VARIABLE EXPONENCIACION VARIABLE |
                            VARIABLE IGUAL VARIABLE EXPONENCIACION VARIABLE PUNTO_Y_COMA;

//##############################################################################
// 
//##############################################################################

