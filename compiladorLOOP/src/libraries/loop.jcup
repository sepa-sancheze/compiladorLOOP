package compiladorloop;

import java_cup.runtime.*;
import createdClasses.arbol;
import createdClasses.token;
import createdClasses.Nodo;
//Agregar variables
parser code {:
    public arbol tree;

    @Override
    public void syntax_error(Symbol sy){
        token t = (token)sy.value;
        done_parsing();
        report_error("Error sintáctico en el token: " + t.getLexema(), null);
    }
:}
init with{:
    this.tree = new arbol();
:}

//##############################################################################
//VARIABLES DEL CUP
//##############################################################################

terminal CLASE, VARIABLE_CLASE, EXTIENDE, TIPO_DATO_CUP, COMA, PUNTO_Y_COMA, IGUAL, MENOS;
terminal PUNTO, CONDICIONES_LOGICAS_CUP, TIPOS_PROP_MET, DOS_PUNTOS, PROPIEDADES;
terminal METODOS, FUNCION;

non terminal S;
non terminal DECLARACION_CLASES_CUP, CUERPO_CLASE_CUP, VARIABLE, VALOR_ASIGNADO_CUP;
non terminal LISTA_VARIABLES_CUP, IGUALACION_CUP, DATOS_VARIABLES_CUP, ASIGNACION_VAR_CUP;
non terminal CONDICION_CUP, CLASE_GENERAL_CUP, PROPIEDADES_CUP, DECLARACION_PROP_CUP;
non terminal VARIABLES_CUP, METODOS_CUP, FUNCIONES_CUP;

//##############################################################################
// Precedencia símbolos terminales
//##############################################################################

start with S;

//El código se va a ejecutar hasta que se hayan cumplido las reglas anteriores.
S ::=                       DECLARACION_CLASES_CUP;

CLASE_GENERAL_CUP ::=       DECLARACION_CLASES_CUP PROPIEDADES_CUP METODOS_CUP;

PROPIEDADES_CUP ::=         DECLARACION_PROP_CUP VARIABLES_CUP PROPIEDADES_CUP |
                            DECLARACION_PROP_CUP VARIABLES_CUP;

METODOS_CUP ::=             METODOS TIPOS_PROP_MET DOS_PUNTOS FUNCIONES_CUP;

FUNCIONES_CUP ::=           FUNCION DATOS_VARIABLES_CUP PARENTESIS1 

VARIABLES_CUP ::=           ASIGNACION_VAR_CUP VARIABLES_CUP |
                            ASIGNACION_VAR_CUP ;

DECLARACION_PROP_CUP ::=    PROPIEDADES TIPOS_PROP_MET DOS_PUNTOS;

DECLARACION_CLASES_CUP ::=  CLASE VARIABLE_CLASE CUERPO_CLASE_CUP |
                            CLASE VARIABLE_CLASE EXTIENDE VARIABLE_CLASE CUERPO_CLASE_CUP;

DATOS_VARIABLES_CUP ::=     VALOR_ASIGNADO_CUP |
                            VARIABLE ;

LISTA_VARIABLES_CUP ::=     VARIABLE COMA LISTA_VARIABLES_CUP |
                            VARIABLE ;

IGUALACION_CUP ::=          TIPO_DATO_CUP LISTA_VARIABLES_CUP IGUAL |
                            TIPO_DATO_CUP VARIABLE IGUAL |
                            VARIABLE IGUAL ;

CONDICION_CUP ::=           DATOS_VARIABLES_CUP CONDICIONES_LOGICAS_CUP DATOS_VARIABLES_CUP;

ASIGNACION_VAR_CUP ::=      TIPO_DATO_CUP DATOS_VARIABLES_CUP |
                            TIPO_DATO_CUP LISTA_VARIABLES_CUP |
                            IGUALACION_CUP DATOS_VARIABLES_CUP |
                            IGUALACION_CUP MENOS DATOS_VARIABLES_CUP |
                            IGUALACION_CUP VARIABLE_CLASE PUNTO VARIABLE |
                            VARIABLE_CLASE PUNTO VARIABLE IGUAL DATOS_VARIABLES_CUP |
                            //VARIABLE_CLASE PUNTO VARIABLE IGUAL DATOS_VARIABLES_CUP PUNTO_Y_COMA |
                            IGUALACION_CUP CONDICION_CUP ;