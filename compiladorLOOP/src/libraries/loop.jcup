package compiladorloop;

import java_cup.runtime.*;
import createdClasses.arbol;
import createdClasses.token;
import createdClasses.Nodo;
//Agregar variables
parser code {:
    public arbol tree;

    @Override
    public void syntax_error(Symbol sy){
        token t = (token)sy.value;
        done_parsing();
        report_error("Error sintáctico en el token: " + t.getLexema(), null);
    }
:}
init with{:
    this.tree = new arbol();
:}

//Símbolos terminales
terminal RAIZ, LOGARITMO,  
terminal 
terminal 
terminal

terminal token NUMERO;
terminal token 
terminal token
terminal token

//Símbolos no terminaless
non terminal token S, I, OP;

//Precedencia para símbolos terminales
//precedence left MAS;                    
//precedence left MENOS;

start with S;

//::= = ->; S MAS S = S + S
//El código se va a ejecutar hasta que se hayan cumplido las reglas anteriores.
S ::=    AND S            {: System.out.println("S -> I S"); :}
        |OR              {: System.out.println("S -> I"); :};
