package compiladorloop;

import java_cup.runtime.*;
import createdClasses.arbol;
import createdClasses.token;
import createdClasses.Nodo;
//Agregar variables
parser code {:
    public arbol tree;

    @Override
    public void syntax_error(Symbol sy){
        token t = (token)sy.value;
        done_parsing();
        report_error("Error sintáctico en el token: " + t.getLexema(), null);
    }
:}
init with{:
    this.tree = new arbol();
:}

//Los símbolos terminales sin token significan que son palabras, tal cual las pasamos
//Si tienen el token significa que es una expresión regular

//##############################################################################
// Símbolos terminales
//##############################################################################

//PALABRAS RESERVADAS
terminal CLASE, PROPIEDADES, METODOS, PROPIEDADES_METODOS;

//TIPOS DE DATOS Y FUNCIONES
terminal TIPO_ENTERO, TIPO_CADENA, TIPO_REAL, TIPO_BOOLEANO, TIPO_NULO;

//PALABRAS RESERVADAS DE IFS
terminal IF, ENTONCES, SINO;

//PALABRAS RESERVADAS LECTURA Y ESCRITURA
terminal LEER, ESCRIBIR;

//PALABRAS RESERVADAS CICLO, FUNCIONES, ETC
terminal DEVOLVER, CONSTRUCTOR, DESTRUCTOR, PRINCIPAL, INSTANCIAR, DESDE, MIENTRAS;
terminal INCREMENTAR, DECREMENTAR, HACER, EXTIENDE, INCLUIR;

//SIGNOS
terminal FI, PARENTESIS1, PARENTESIS2, COMA, SUMA, RESTA, MULTIPLICACION, DIVISION;
terminal MODULO, EXPONENCIACION, IGUAL, INCREMENTO, DECREMENTO, AND, OR, MAYOR_QUE;
terminal MENOR_QUE, IGUAL_QUE, DISTINTO_QUE, DOS_PUNTOS, CORCHETE1, CORCHETE2;
terminal LLAVE1, LLAVE2, PUNTO_Y_COMA;

//TIPOS DE DATOS
terminal token DECIMALES, REALES, BOOLEANO, CADENA;

//VARIABLES
terminal VARIABLE, VALOR_ASIGNADO;

//CLASES
terminal  VARIABLE_CLASE,ELIMINAR;

//ERROR
terminal ERROR;

//TABULACION
terminal TABULACION;

//##############################################################################
//VARIABLES DEL CUP
//##############################################################################
non terminal token S, I, OP;
non terminal ASIGNACION_ENTERO_CUP, ASIGNACION_REAL_CUP, ASIGNACION_CADENA_CUP;
non terminal ASIGNACION_BOOLEANO_CUP, SUMA_CUP, RESTA_CUP, MULTIPLICACION_CUP;
non terminal DIVISION_CUP, MODULO_CUP, EXPONENCIACION_CUP;
non terminal LISTA_VARIABLES_CUP, TIPO_DATO_CUP,ASIGNACION_VAR_CUP;
non terminal CUERPO_CLASE_CUP , LISTA_METODOS_CUP ,LISTA_PROPIEDADES_CUP, DECLARACION_CLASES_CUP, ELIMINACION_CLASES_CUP;
non terminal DECLARACION_FUNCIONES_SUELTAS_CUP, TIPO_FUNCION_CUP;

//##############################################################################
// Precedencia símbolos terminales
//##############################################################################
//precedence left MAS;                    
//precedence left MENOS;

start with S;

//El código se va a ejecutar hasta que se hayan cumplido las reglas anteriores.
S ::=                       AND S            {: System.out.println("S -> I S"); :}
                            |OR              {: System.out.println("S -> I"); :}
                            |DECLARACION_CLASES_CUP;
                            
//##############################################################################
//CLASES
//##############################################################################

DECLARACION_CLASES_CUP ::=  CLASE VARIABLE_CLASE CUERPO_CLASE_CUP 
                            |CLASE VARIABLE_CLASE EXTIENDE VARIABLE_CLASE CUERPO_CLASE_CUP;

CUERPO_CLASE_CUP::=         TABULACION PROPIEDADES PROPIEDADES_METODOS DOS_PUNTOS  LISTA_PROPIEDADES_CUP CUERPO_CLASE_CUP
                            |TABULACION METODOS PROPIEDADES_METODOS DOS_PUNTOS  LISTA_METODOS_CUP;
                        
LISTA_PROPIEDADES_CUP::=    TABULACION ASIGNACION_VAR_CUP
                            |TABULACION ASIGNACION_VAR_CUP  LISTA_PROPIEDADES_CUP;

LISTA_METODOS_CUP::=         DECLARACION_FUNCIONES_SUELTAS_CUP
                            |DECLARACION_FUNCIONES_SUELTAS_CUP LISTA_METODOS_CUP
                            |TABULACION CONSTRUCTOR PARENTESIS1 PARENTESIS2 TABULACION ASIGNACION_VAR_CUP 
                            |TABULACION CONSTRUCTOR PARENTESIS1 PARENTESIS2 TABULACION ASIGNACION_VAR_CUP LISTA_METODOS_CUP
                            |TABULACION CONSTRUCTOR PARENTESIS1 LISTA_VARIABLES_CUP PARENTESIS2 TABULACION ASIGNACION_VAR_CUP
                            |TABULACION CONSTRUCTOR PARENTESIS1 LISTA_VARIABLES_CUP PARENTESIS2 TABULACION ASIGNACION_VAR_CUP LISTA_METODOS_CUP
                            |TABULACION DESTRUCTOR PARENTESIS1 PARENTESIS2 TABULACION ELIMINACION_CLASES_CUP
                            |TABULACION DESTRUCTOR PARENTESIS1 PARENTESIS2 TABULACION ELIMINACION_CLASES_CUP LISTA_METODOS_CUP;

ELIMINACION_CLASES_CUP::=    ELIMINAR VARIABLE_CLASE
                            |ELIMINAR VARIABLE_CLASE ELIMINACION_CLASES_CUP;

//##############################################################################
//FUNCIONES 
//##############################################################################

DECLARACION_FUNCIONES_SUELTAS_CUP ::= TIPO_FUNCION_CUP VARIABLE PARENTESIS1 PARENTESIS2 //CUERPO OPERACIONES
                            |TIPO_FUNCION_CUP VARIABLE PARENTESIS1 LISTA_VARIABLES_CUP PARENTESIS2 //CUERPO OPERACOPMES



TIPO_FUNCION_CUP        ::= TIPO_ENTERO 
                            |TIPO_BOOLEANO
                            |TIPO_CADENA 
                            |TIPO_REAL 
                            |TIPO_NULO;


//##############################################################################
// Tipos variables y datos
//##############################################################################

TIPO_DATO_CUP ::=           TIPO_ENTERO |
                            TIPO_BOOLEANO |
                            TIPO_CADENA |
                            TIPO_REAL ;
                        
VALOR_ASIGNADO_CUP ::=      DECIMALES |
                            REALES |
                            BOOLEANO |
                            CADENA;

DATOS_VARIABLES_CUP ::=     VALOR_ASIGNADO_CUP |
                            VARIABLE ;

IGUALACION_CUP ::=          VARIABLE IGUAL |
                            TIPO_DATO_CUP VARIABLE IGUAL |
                            TIPO_DATO_CUP LISTA_VARIABLES_CUP IGUAL;

LISTA_VARIABLES_CUP ::=     VARIABLE |
                            VARIABLE COMA LISTA_VARIABLES_CUP;

//##############################################################################
// Reglas de asignación de variables
//##############################################################################

ASIGNACION_VAR_CUP ::=      TIPO_DATO_CUP DATOS_VARIABLES_CUP |
                            TIPO_DATO_CUP DATOS_VARIABLES_CUP PUNTO_Y_COMA |
                            TIPO_DATO_CUP LISTA_VARIABLES_CUP |
                            TIPO_DATO_CUP LISTA_VARIABLES_CUP PUNTO_Y_COMA |
                            IGUALACION_CUP DATOS_VARIABLES_CUP |
                            IGUALACION_CUP DATOS_VARIABLES_CUP PUNTO_Y_COMA |
                            IGUALACION_CUP MENOS DATOS_VARIABLES_CUP |
                            IGUALACION_CUP MENOS DATOS_VARIABLES_CUP PUNTO_Y_COMA |
                            IGUALACION_CUP VARIABLE_CLASE PUNTO VARIABLE |
                            IGUALACION_CUP VARIABLE_CLASE PUNTO VARIABLE PUNTO_Y_COMA |
                            VARIABLE_CLASE PUNTO VARIABLE IGUAL DATOS_VARIABLES_CUP |
                            VARIABLE_CLASE PUNTO VARIABLE IGUAL DATOS_VARIABLES_CUP PUNTO_Y_COMA ;
                            
//##############################################################################
// Operaciones aritméticas
//##############################################################################

OPERACIONES_CUP  ::=        SUMA |
                            RESTA |
                            MULTIPLICACION |
                            DIVISION |
                            MODULO |
                            EXPONENCIACION;

REALIZAR_OPERACION_CUP ::=  IGUALACION_CUP LISTA_OPERACIONES_CUP |
                            IGUALACION_CUP LISTA_OPERACIONES_CUP PUNTO_Y_COMA;

LISTA_OPERACIONES_CUP ::=   DATOS_VARIABLES_CUP |
                            DATOS_VARIABLES_CUP OPERACIONES_CUP LISTA_OPERACIONES_CUP;

//##############################################################################
// Pre y post incrementos
//##############################################################################

INC_DEC_CUP ::=             VARIABLE SUMA SUMA |
                            VARIABLE SUMA SUMA PUNTO_Y_COMA |
                            VARIABLE RESTA RESTA |
                            VARIABLE RESTA RESTA PUNTO_Y_COMA |
                            SUMA SUMA VARIABLE |
                            SUMA SUMA VARIABLE PUNTO_Y_COMA |
                            RESTA RESTA VARIABLE |
                            RESTA RESTA VARIABLE PUNTO_Y_COMA |
                            IGUALACION_CUP INC_DEC_CUP;

//##############################################################################
// Operaciones lógicas
//##############################################################################

OPERACIONES_LOGICAS_CUP::=  AND |
                            OR ;

REALIZAR_OP_LOGICA_CUP ::=  IGUALACION_CUP LISTA_LOGICAS_CUP |
                            IGUALACION_CUP LISTA_LOGICAS_CUP PUNTO_Y_COMA;

LISTA_LOGICAS_CUP ::=       DATOS_VARIABLES_CUP |
                            DATOS_VARIABLES_CUP OPERACIONES_LOGICAS_CUP LISTA_LOGICAS_CUP;

//##############################################################################
// Símbolos de agrupación
//##############################################################################

OPERACIONES_PARENT_CUP::=   DATOS_VARIABLES_CUP |
                            DATOS_VARIABLES_CUP OPERACIONES_PARENT_CUP ;
                            

DATOS_IN_PARENTESIS ::=     PARENTESIS1 OPERACIONES_PARENT_CUP PARENTESIS2 ;

AGRUPACION_CUP ::=          IGUALACION_CUP DATOS_IN_PARENTESIS |
                            IGUALACION_CUP LISTA_OPERACIONES_CUP OPERACIONES_CUP DATOS_IN_PARENTESIS |
                            IGUALACION_CUP DATOS_IN_PARENTESIS OPERACIONES_CUP LISTA_OPERACIONES_CUP |
                            IGUALACION_CUP LISTA_OPERACIONES_CUP OPERACIONES_CUP DATOS_IN_PARENTESIS OPERACIONES_CUP LISTA_OPERACIONES_CUP ;

//##############################################################################
// Escritura y lectura
//##############################################################################

LISTA_ESCRITURA_CUP ::=     DATOS_VARIABLES_CUP |
                            DATOS_VARIABLES_CUP COMA LISTA_VARIABLES_CUP;

ESCRITURA_CUP ::=           ESCRIBIR LISTA_VARIABLES_CUP |
                            ESCRIBIR LISTA_VARIABLES_CUP PUNTO_Y_COMA ;

LECTURA_CUP ::=             LEER VARIABLE |
                            LEER VARIABLE PUNTO_Y_COMA ;